"""add chat auto updated_at

Revision ID: d75644b4a3ea
Revises: 5ba9223a40b4
Create Date: 2025-07-31 03:13:48.755406

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import func

# revision identifiers, used by Alembic.
revision: str = "d75644b4a3ea"
down_revision: Union[str, Sequence[str], None] = "5ba9223a40b4"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Add server default for updated_at column
    op.alter_column(
        "chats",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        server_default=func.now(),
        existing_nullable=True,
    )

    # Create trigger function and trigger for automatic updated_at updates
    op.execute(
        """
        CREATE OR REPLACE FUNCTION set_updated_at()
        RETURNS TRIGGER AS $$
        BEGIN
            NEW.updated_at = NOW();
            RETURN NEW;
        END;
        $$ LANGUAGE plpgsql;
    """
    )

    op.execute(
        """
        DROP TRIGGER IF EXISTS trg_set_updated_at ON chats;
        CREATE TRIGGER trg_set_updated_at
        BEFORE UPDATE ON chats
        FOR EACH ROW EXECUTE FUNCTION set_updated_at();
    """
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop trigger and function
    op.execute("DROP TRIGGER IF EXISTS trg_set_updated_at ON chats;")
    op.execute("DROP FUNCTION IF EXISTS set_updated_at();")

    # Remove server default
    op.alter_column(
        "chats",
        "updated_at",
        existing_type=sa.DateTime(timezone=True),
        server_default=None,
        existing_nullable=True,
    )
    # ### end Alembic commands ###
